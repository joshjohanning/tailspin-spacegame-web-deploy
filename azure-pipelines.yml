trigger:
- blue-green

stages:
- stage: 'Build'
  variables:
    wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
    dotnetSdkVersion: '3.1.300'
    buildConfiguration: 'Release'
  jobs: 
  - template: dotnet-core/dotnet-core-build.yml@templates
    parameters:
      buildConfiguration: '${{ variables.buildConfiguration }}'
      nugetFeed: ''
      services:
      - name: 'Tailspin.SpaceGame.Web'
        projectFile: '**/Tailspin.SpaceGame.Web.csproj'
        repo: 'self'
        runSonarQube: 'false'
        sonarProjectKey: '*'
        sonarProjectName: 'Tailspin.SpaceGame.Web'
        runDotNetCoreTests: 'true'
        vmImage: 'ubuntu-latest'


- stage: deployDev
  displayName: Deploy to Dev
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables: 
    - name: azureSubscription
      value: demo-mslearn-tailspin-azure
  # - group: DEV
  # - group: ALL-ENV
  # - name: environment
  #   value: 'dev'
  jobs: 
  - template: dotnet-core/dotnet-core-deploy.yml@templates
    parameters:
      services:
      - name: 'Tailspin.SpaceGame.Web'
        runDeploy: true
        environment:
          name: 'dev'
        vmImage: 'ubuntu-latest' # Azure
        replaceTokensTargetFiles: |
          **/appsettings.tokenize.json => appsettings.json
          **/connectionstrings.tokenize.json => connectionstrings.json
        appSettingsEdits: '-ASPNETCORE_ENVIRONMENT Development'
        jsonVariableSubstituion: 'appsettings.json'
        azure:
        - azureSubscription: '${{ variables.azureSubscription }}'
          webApp:
          - websiteName: 'app-tailspin-DEV'
            resourceGroupName: 'rg-tailspin-terraform-DEV'
            slotName: 'swap'