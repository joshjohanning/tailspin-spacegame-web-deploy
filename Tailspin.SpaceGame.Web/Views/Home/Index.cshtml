@using Microsoft.Extensions.Options;
@using AspNetCoreInjectConfigurationRazor.Configuration;

@inject IOptions<ApplicationInsights> OptionsApplicationInsightsConfiguration

@model TailSpin.SpaceGame.Web.Models.LeaderboardViewModel
@{
    ViewData["Title"] = "Home Page";
}

<script type="text/javascript">
    !function (T, l, y) { var S = T.location, u = "script", k = "instrumentationKey", D = "ingestionendpoint", C = "disableExceptionTracking", E = "ai.device.", I = "toLowerCase", b = "crossOrigin", w = "POST", e = "appInsightsSDK", t = y.name || "appInsights"; (y.name || T[e]) && (T[e] = t); var n = T[t] || function (d) { var g = !1, f = !1, m = { initialize: !0, queue: [], sv: "4", version: 2, config: d }; function v(e, t) { var n = {}, a = "Browser"; return n[E + "id"] = a[I](), n[E + "type"] = a, n["ai.operation.name"] = S && S.pathname || "_unknown_", n["ai.internal.sdkVersion"] = "javascript:snippet_" + (m.sv || m.version), { time: function () { var e = new Date; function t(e) { var t = "" + e; return 1 === t.length && (t = "0" + t), t } return e.getUTCFullYear() + "-" + t(1 + e.getUTCMonth()) + "-" + t(e.getUTCDate()) + "T" + t(e.getUTCHours()) + ":" + t(e.getUTCMinutes()) + ":" + t(e.getUTCSeconds()) + "." + ((e.getUTCMilliseconds() / 1e3).toFixed(3) + "").slice(2, 5) + "Z" }(), iKey: e, name: "Microsoft.ApplicationInsights." + e.replace(/-/g, "") + "." + t, sampleRate: 100, tags: n, data: { baseData: { ver: 2 } } } } var h = d.url || y.src; if (h) { function a(e) { var t, n, a, i, r, o, s, c, p, l, u; g = !0, m.queue = [], f || (f = !0, t = h, s = function () { var e = {}, t = d.connectionString; if (t) for (var n = t.split(";"), a = 0; a < n.length; a++) { var i = n[a].split("="); 2 === i.length && (e[i[0][I]()] = i[1]) } if (!e[D]) { var r = e.endpointsuffix, o = r ? e.location : null; e[D] = "https://" + (o ? o + "." : "") + "dc." + (r || "services.visualstudio.com") } return e }(), c = s[k] || d[k] || "", p = s[D], l = p ? p + "/v2/track" : config.endpointUrl, (u = []).push((n = "SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details)", a = t, i = l, (o = (r = v(c, "Exception")).data).baseType = "ExceptionData", o.baseData.exceptions = [{ typeName: "SDKLoadFailed", message: n.replace(/\./g, "-"), hasFullStack: !1, stack: n + "\nSnippet failed to load [" + a + "] -- Telemetry is disabled\nHelp Link: https://go.microsoft.com/fwlink/?linkid=2128109\nHost: " + (S && S.pathname || "_unknown_") + "\nEndpoint: " + i, parsedStack: [] }], r)), u.push(function (e, t, n, a) { var i = v(c, "Message"), r = i.data; r.baseType = "MessageData"; var o = r.baseData; return o.message = 'AI (Internal): 99 message:"' + ("SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details) (" + n + ")").replace(/\"/g, "") + '"', o.properties = { endpoint: a }, i }(0, 0, t, l)), function (e, t) { if (JSON) { var n = T.fetch; if (n && !y.useXhr) n(t, { method: w, body: JSON.stringify(e), mode: "cors" }); else if (XMLHttpRequest) { var a = new XMLHttpRequest; a.open(w, t), a.setRequestHeader("Content-type", "application/json"), a.send(JSON.stringify(e)) } } }(u, l)) } function i(e, t) { f || setTimeout(function () { !t && m.core || a() }, 500) } var e = function () { var n = l.createElement(u); n.src = h; var e = y[b]; return !e && "" !== e || "undefined" == n[b] || (n[b] = e), n.onload = i, n.onerror = a, n.onreadystatechange = function (e, t) { "loaded" !== n.readyState && "complete" !== n.readyState || i(0, t) }, n }(); y.ld < 0 ? l.getElementsByTagName("head")[0].appendChild(e) : setTimeout(function () { l.getElementsByTagName(u)[0].parentNode.appendChild(e) }, y.ld || 0) } try { m.cookie = l.cookie } catch (p) { } function t(e) { for (; e.length;)!function (t) { m[t] = function () { var e = arguments; g || m.queue.push(function () { m[t].apply(m, e) }) } }(e.pop()) } var n = "track", r = "TrackPage", o = "TrackEvent"; t([n + "Event", n + "PageView", n + "Exception", n + "Trace", n + "DependencyData", n + "Metric", n + "PageViewPerformance", "start" + r, "stop" + r, "start" + o, "stop" + o, "addTelemetryInitializer", "setAuthenticatedUserContext", "clearAuthenticatedUserContext", "flush"]), m.SeverityLevel = { Verbose: 0, Information: 1, Warning: 2, Error: 3, Critical: 4 }; var s = (d.extensionConfig || {}).ApplicationInsightsAnalytics || {}; if (!0 !== d[C] && !0 !== s[C]) { method = "onerror", t(["_" + method]); var c = T[method]; T[method] = function (e, t, n, a, i) { var r = c && c(e, t, n, a, i); return !0 !== r && m["_" + method]({ message: e, url: t, lineNumber: n, columnNumber: a, error: i }), r }, d.autoExceptionInstrumented = !0 } return m }(y.cfg); (T[t] = n).queue && 0 === n.queue.length && n.trackPageView({}) }(window, document, {
        src: "https://az416426.vo.msecnd.net/scripts/b/ai.2.min.js", // The SDK URL Source
        //name: "appInsights", // Global SDK Instance name defaults to "appInsights" when not supplied
        //ld: 0, // Defines the load delay (in ms) before attempting to load the sdk. -1 = block page load and add to head. (default) = 0ms load after timeout,
        //useXhr: 1, // Use XHR instead of fetch to report failures (if available),
        //crossOrigin: "anonymous", // When supplied this will add the provided value as the cross origin attribute on the script tag
        cfg: { // Application Insights Configuration
            instrumentationKey: "@OptionsApplicationInsightsConfiguration.Value.InstrumentationKey"
            /* ...Other Configuration Options... */
        }
    });
</script>

<section class="intro">
    <div class="container">
        <img class="title" src="/images/space-game-title.svg" alt="Space Game">
        <p>An example site for learning</p>
    </div>
</section>
<section class="download">
    <div class="image-cap"></div>
    <div class="container">
        <a href="" class="btn btn-default btn-lg" data-toggle="modal" data-target="#pretend-modal">Download game</a>
    </div>
</section>

<!-- Screenshots -->
<section class="screens">
    <div class="container">
        <ul>
            <li><a href="" data-toggle="modal" data-target=".pic-01"><img src="/images/space-game-placeholder.svg" alt=""></a></li>
            <li><a href="" data-toggle="modal" data-target=".pic-01"><img src="/images/space-game-placeholder.svg" alt=""></a></li>
            <li><a href="" data-toggle="modal" data-target=".pic-01"><img src="/images/space-game-placeholder.svg" alt=""></a></li>
            <li><a href="" data-toggle="modal" data-target=".pic-01"><img src="/images/space-game-placeholder.svg" alt=""></a></li>
        </ul>
    </div>
</section>

<!-- Leaderboard -->
<section class="leaderboard">
    <div class="container">
        <a name="leaderboard"></a>
        <h2>Space leaders</h2>
        <!-- Start Leaderboard table -->
        <div class="row">
            <div class="col-sm-9 leader-scores">
                <div class="row high-score hidden-xs">
                    <div class="col-sm-1">
                        Rank
                    </div>
                    <div class="col-sm-4">
                        Player
                    </div>
                    <div class="col-sm-2">
                        Mode
                    </div>
                    <div class="col-sm-3">
                        Galaxy
                    </div>
                    <div class="col-sm-2">
                        Score
                    </div>
                </div>

                @{
                    if (Model.Scores.Count() == 0)
                    {
                    <div class="row" style="margin-left: 5px; margin-top: 20px;">No scores match your selection.</div>
                    }

                    int rank = ((Model.Page - 1) * Model.PageSize) + 1;
                    foreach (var score in Model.Scores)
                    {
                    <div class="row high-score align-items-center">
                        <div class="col-sm-1 score-data">
                            @(rank++).
                        </div>
                        <div class="col-sm-4 score-data">
                            <div style="text-align: left; margin-left: 100px;">
                                <partial name="Profile" model="new ProfileViewModel { Profile = score.Profile, Rank = (rank - 1).ToString() }" />
                                <a href="" data-toggle="modal" data-target="#profile-modal-@((rank - 1).ToString())">
                                    <img class="avatar" src="@score.Profile.AvatarUrl" alt="@score.Profile.UserName">
                                    <div class="score-data username">
                                        @score.Profile.UserName
                                    </div>
                                </a>
                            </div>
                        </div>
                        <div class="col-sm-2 score-data">
                            @score.Score.GameMode
                        </div>
                        <div class="col-sm-3 score-data">
                            @score.Score.GameRegion
                        </div>
                        <div class="col-sm-2 score-data">
                            @score.Score.HighScore.ToString("N0")
                        </div>
                    </div>
                    }
                }
                <nav aria-label="...">
                    <ul class="pagination">
                        @if (string.IsNullOrEmpty(Model.PrevLink))
                        {
                        <li class="disabled"><span aria-hidden="true">&laquo;</span></li>
                        }
                        else
                        {
                        <li class=""><a href="@Model.PrevLink" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>
                        }
                        @{
                            var totalPages = Model.TotalResults / Model.PageSize;
                            if (Model.TotalResults % Model.PageSize != 0)
                            {
                                totalPages++;
                            }

                            for (int i = 1; i <= totalPages; i++)
                            {
                            <li class="@(i == Model.Page ? "active" : null)">
                                <a href="@($"/?page={i}&pageSize={@Model.PageSize}&mode={@Model.SelectedMode}&region={@Model.SelectedRegion}")#leaderboard">
                                    @i
                                    <span class="sr-only">(current)</span>
                                </a>
                            </li>
                            }
                        }
                        @if (string.IsNullOrEmpty(Model.NextLink))
                        {
                        <li class="disabled"><span aria-hidden="true">&raquo;</span></li>
                        }
                        else
                        {
                        <li class=""><a href="@Model.NextLink" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>
                        }
                    </ul>
                </nav>
            </div>

            <div class="col-sm-3">
                <div class="leader-nav hidden-xs">
                    <div class="row nav-buttons">
                        <h4>Mode</h4>
                        <ul>
                            @if (string.IsNullOrEmpty(Model.SelectedMode))
                            {
                            <li class="filter-active">All</li>
                            }
                            else
                            {
                            <li class="filter-button">
                                <a class="" href="/?region=@Model.SelectedRegion#leaderboard">All</a>
                            </li>
                            }
                            @{
                                foreach (var mode in Model.GameModes)
                                {
                                @if (mode.Equals(Model.SelectedMode))
                                    {
                                <li class="filter-active">@mode</li>
                                    }
                                    else
                                    {
                                <li class="filter-button"><a href="/?mode=@mode&region=@Model.SelectedRegion#leaderboard">@mode</a></li>
                                    }
                                }
                            }
                        </ul>
                    </div>

                    <div class="row nav-buttons">
                        <h4>Galaxy</h4>
                        <ul>
                            @if (string.IsNullOrEmpty(Model.SelectedRegion))
                            {
                            <li class="filter-active">All</li>
                            }
                            else
                            {
                            <li class="filter-button"><a href="/?mode=@Model.SelectedMode#leaderboard">All</a></li>
                            }

                            @{
                                foreach (var region in Model.GameRegions)
                                {
                                @if (region.Equals(Model.SelectedRegion))
                                    {
                                <li class="filter-active">@region</li>
                                    }
                                    else
                                    {
                                <li class="filter-button"><a href="/?mode=@Model.SelectedMode&region=@region#leaderboard">@region</a></li>
                                    }
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Leaderboard -->
    </div>
</section>

<!-- About section -->
<section class="about">
    <h2>More about Space Game</h2>
    <p>Space Game is an example website for learning purposes. Check out <a href="https://aka.ms/mslearndevops/">Microsoft Learn</a> to find out more.</p>
</section>
<section class="social">
    <div class="container">
        <div class="share">
            <ul>
                <li><a href="" data-toggle="modal" data-target=".social-media"><img src="/images/space-game-placeholder.svg" alt="" /></a></li>
                <li><a href="" data-toggle="modal" data-target=".social-media"><img src="/images/space-game-placeholder.svg" alt="" /></a></li>
                <li><a href="" data-toggle="modal" data-target=".social-media"><img src="/images/space-game-placeholder.svg" alt="" /></a></li>
            </ul>
        </div>
    </div>
    <p>&copy; @DateTime.Now.Year - TailSpin Toys</p>
</section>


<!-- Modals -->
<div class="modal fade" id="test-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header no-border">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                modal
            </div>
        </div>
    </div>
</div>

<!-- Pic modals -->
<div class="modal fade pic-01" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header no-border">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                <img src="/images/space-game-placeholder.svg" width="100%" alt="">
                <p>Gamescreen example</p>
            </div>
        </div>
    </div>
</div>

<!-- Social -->
<div class="modal fade social-media" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header no-border">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                Social media example
            </div>
        </div>
    </div>
</div>

<!-- Dead end modal -->
<div class="modal fade" id="pretend-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header no-border">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                This link is for example purposes and goes nowhere. 😐
            </div>
        </div>
    </div>
</div>